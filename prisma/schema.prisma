// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./bot.db"
}

model GuildConfig {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  welcomeChannelId     String?
  suggestionsChannelId String?
  reportsChannelId     String?
}

model User {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fullName  String?
  graduated Boolean?
  grade     Int?
  teacher1  String?
  teacher2  String?
  teacher3  String?
  teacher4  String?

  createdEvents      Event[]      @relation("EventCreator")
  privateEvents      Event[]      @relation("EventPermittedUser")
  createdSuggestions Suggestion[] @relation("SuggestionCreator")
  reportsAgainstUser Report[]     @relation("ReportedUser")
}

model Event {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creator   User   @relation("EventCreator", fields: [creatorId], references: [id])
  creatorId String

  private        Boolean
  permittedUsers User[]  @relation("EventPermittedUser")

  name          String
  description   String
  startDateTime DateTime
  endDateTime   DateTime
}

model AutoResponder {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name         String
  triggerRegex String
  response     String
}

model WelcomeMessage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content String
}

model Suggestion {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creator   User   @relation("SuggestionCreator", fields: [creatorId], references: [id])
  creatorId String

  title     String
  content   String
  upvotes   Int    @default(0)
  downvotes Int    @default(0)

  messageId String? // The message the bot sent, used to track emoji reactions on message
  approved  Boolean @default(false)
  rejected  Boolean @default(false)
}

model Report {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reportedUser   User   @relation("ReportedUser", fields: [reportedUserId], references: [id])
  reportedUserId String

  content String
}
